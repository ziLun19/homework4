{"version":3,"sources":["hw4.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","display","flexDirection","alignItems","Hw4","class1","UserGithub","props","state","avatarUrl","username","githubtUrl","Location","ID","Login","$","get","this","source","result","console","log","data","setState","avatar_url","name","html_url","location","id","login","className","src","href","React","Component","ReactDOM","render","document","getElementById","output","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"wQAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,cAuDHC,EAnDL,WACN,IAAMC,EAASV,IACTW,EAFI,kDAGN,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAW,GACXC,SAAU,GACVC,WAAY,GACZC,SAAU,GACVC,GAAI,GACJC,MAAO,IARI,EAHb,qDAcN,WAAqB,IAAD,OAChBC,IAAEC,IAAIC,KAAKV,MAAMW,QAAQ,SAACC,GACtBC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EACTG,GACA,EAAKC,SAAS,CACVd,UAAWa,EAAKE,WAChBd,SAAUY,EAAKG,KACfd,WAAYW,EAAKI,SACjBd,SAAUU,EAAKK,SACfd,GAAIS,EAAKM,GACTd,MAAOQ,EAAKO,aAzBtB,oBA8BN,WACI,OACA,sBAAKC,UAAWzB,EAAOP,KAAvB,UACI,qBAAKiC,IAAKd,KAAKT,MAAMC,YACrB,6BAAKQ,KAAKT,MAAME,WAChB,6BAAKO,KAAKT,MAAMM,QAChB,qCAAQG,KAAKT,MAAMK,MACnB,6BAAKI,KAAKT,MAAMI,WAChB,mBAAGoB,KAAMf,KAAKT,MAAMG,WAApB,yBANJ,WAhCE,GAEesB,IAAMC,WAyC/BC,IAASC,OACL,cAAC9B,EAAD,CAAYY,OAAO,yCACnBmB,SAASC,eAAe,SAE5B,IAAIC,EAAO,GAEX,OADAA,EAAOC,KAAK,cAAClC,EAAD,KACLiC,GCnDIE,MATf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,8BACE1B,SCKOsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdR,IAASC,OACP,cAAC,IAAMe,WAAP,UACD,cAAC,EAAD,MAECd,SAASC,eAAe,SAM1BI,M","file":"static/js/main.3aa30908.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport $ from 'jquery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    }\r\n}));\r\n\r\nconst Hw4=()=>{\r\n    const class1 = useStyles();\r\n    class UserGithub extends React.Component { \r\n        constructor(props) { \r\n            super(props); \r\n            this.state = { \r\n                avatarUrl: '',\r\n                username: '', \r\n                githubtUrl: '', \r\n                Location: '',\r\n                ID: '',\r\n                Login: '',\r\n            } \r\n        } \r\n        componentDidMount() { \r\n            $.get(this.props.source, (result) => { \r\n                console.log(result); \r\n                const data = result; \r\n                if (data) { \r\n                    this.setState({ \r\n                        avatarUrl: data.avatar_url,\r\n                        username: data.name, \r\n                        githubtUrl: data.html_url, \r\n                        Location: data.location, \r\n                        ID: data.id,\r\n                        Login: data.login\r\n                    }); \r\n                } \r\n            }); \r\n        } \r\n        render() { \r\n            return ( \r\n            <div className={class1.root}> \r\n                <img src={this.state.avatarUrl} /> \r\n                <h1>{this.state.username}</h1> \r\n                <h2>{this.state.Login}</h2>\r\n                <h3>ID:{this.state.ID}</h3>\r\n                <h3>{this.state.Location}</h3>\r\n                <a href={this.state.githubtUrl}>Github Link</a>. \r\n            </div> \r\n            ); \r\n        } \r\n    }\r\n    ReactDOM.render( \r\n        <UserGithub source=\"https://api.github.com/users/ziLun19\" />, \r\n        document.getElementById('root') \r\n    );\r\n    var output=[];\r\n    output.push(<UserGithub/>)\r\n    return output\r\n}\r\nexport default Hw4;","import './App.css';\nimport Hw4 from './hw4'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n      { Hw4() }\n      </div>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n <App />\n </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}